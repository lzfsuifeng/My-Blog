// <auto-generated />
using Blog_Web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Blog_Web.Migrations
{
    [DbContext(typeof(BlogContext))]
    [Migration("20180520042620_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Blog_Web.Models.Administrator", b =>
                {
                    b.Property<int>("Admin_ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Admin_Email")
                        .IsRequired();

                    b.Property<string>("Admin_Img");

                    b.Property<string>("Admin_Name")
                        .IsRequired()
                        .HasColumnName("Admin_Name")
                        .HasMaxLength(50);

                    b.Property<string>("Admin_Password")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("Admin_ID");

                    b.ToTable("Administrator");
                });

            modelBuilder.Entity("Blog_Web.Models.Blog", b =>
                {
                    b.Property<int>("Blog_Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Admin_Id");

                    b.Property<string>("Blog_Context")
                        .IsRequired()
                        .HasColumnName("Blog_Context");

                    b.Property<string>("Blog_Digest")
                        .IsRequired()
                        .HasColumnName("Blog_Digest")
                        .HasMaxLength(100);

                    b.Property<string>("Blog_Img")
                        .IsRequired();

                    b.Property<DateTime>("Blog_Time");

                    b.Property<string>("Blog_Title")
                        .IsRequired()
                        .HasColumnName("Blog_Title")
                        .HasMaxLength(50);

                    b.Property<int>("Tally_Id");

                    b.HasKey("Blog_Id");

                    b.HasIndex("Admin_Id");

                    b.HasIndex("Tally_Id");

                    b.ToTable("Blog");
                });

            modelBuilder.Entity("Blog_Web.Models.Comment", b =>
                {
                    b.Property<int>("Comment_Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Blog_Id");

                    b.Property<string>("Comment_Context")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("Comment_Time");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Visitor")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Comment_Id");

                    b.HasIndex("Blog_Id");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("Blog_Web.Models.Contact", b =>
                {
                    b.Property<int>("Contact_Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("Time");

                    b.HasKey("Contact_Id");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("Blog_Web.Models.Tally", b =>
                {
                    b.Property<int>("Tally_Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Tally_Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Tally_Id");

                    b.ToTable("Tally");
                });

            modelBuilder.Entity("Blog_Web.Models.Blog", b =>
                {
                    b.HasOne("Blog_Web.Models.Administrator", "Administrator")
                        .WithMany("Blogs")
                        .HasForeignKey("Admin_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Blog_Web.Models.Tally", "Tally")
                        .WithMany("Blogs")
                        .HasForeignKey("Tally_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Blog_Web.Models.Comment", b =>
                {
                    b.HasOne("Blog_Web.Models.Blog")
                        .WithMany("Comments")
                        .HasForeignKey("Blog_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
